# This file contains common pin mappings for RAMPS (v1.3 and later)
# boards. RAMPS boards typically use a firmware compiled for the AVR
# atmega2560 (though other AVR chips are also possible).

# See the example.cfg file for a description of available parameters.

# Homing override. One may use this mechanism to run a series of
# g-code commands in place of a G28 found in the normal g-code input.
# This may be useful on printers that require a specific procedure to
# home the machine.
[homing_override]
gcode: G90
#   A list of G-Code commands (one per line; subsequent lines
#   indented) to execute in place of G28 commands found in the normal
#   g-code input. If a G28 is contained in this list of commands then
#   it will invoke the normal homing procedure for the printer. The
#   commands listed here must home all axes. This parameter must be
#   provided.
axes: xyz
#   The axes to override. For example, if this is set to "z" then the
#   override script will only be run when the z axis is homed (eg, via
#   a "G28" or "G28 Z0" command). Note, the override script should
#   still home all axes. The default is "xyz" which causes the
#   override script to be run in place of all G28 commands.
set_position_x: 0
set_position_y: 0
set_position_z: 0
#   If specified, the printer will assume the axis is at the specified
#   position prior to running the above g-code commands. Setting this
#   disables homing checks for that axis. This may be useful if the
#   head must move prior to invoking the normal G28 mechanism for an
#   axis. The default is to not force a position for an axis.

[stepper_x]
step_pin: ar23
dir_pin: ar22
enable_pin: !ar38
endstop_pin: !ar13
position_endstop: 0
step_distance: .0125
position_max: 200
homing_speed: 50

[stepper_y]
step_pin: ar60
dir_pin: ar61
enable_pin: !ar57
step_distance: .0125
endstop_pin: !ar54
#endstop_pin: ^ar15
position_endstop: 0
position_max: 200
homing_speed: 50

[stepper_z]
step_pin: ar46
dir_pin: ar56
enable_pin: !ar62
step_distance: .0025
endstop_pin: !ar18
#endstop_pin: ^ar19
position_endstop: 0.5
position_max: 200

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
#   A pseudo acceleration (in mm/s^2) controlling how fast the
#   toolhead may go from acceleration to deceleration. It is used to
#   reduce the top speed of short zig-zag moves (and thus reduce
#   printer vibration from these moves). The default is half of
#   max_accel.
max_z_velocity: 25
#   For cartesian printers this sets the maximum velocity (in mm/s) of
#   movement along the z axis. This setting can be used to restrict
#   the maximum speed of the z stepper motor on cartesian
#   printers. The default is to use max_velocity for max_z_velocity.
max_z_accel: 30
# "RepRapDiscount 2004 Smart Controller" type displays
#[display]
#lcd_type: hd44780
#rs_pin: ar16
#e_pin: ar17
#d4_pin: ar23
#d5_pin: ar25
#d6_pin: ar27
#d7_pin: ar29
#encoder_pins: ^ar31, ^ar33
#click_pin: ^!ar35

# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
#[display]
#lcd_type: st7920
#cs_pin: ar16
#sclk_pin: ar23
#sid_pin: ar17
#encoder_pins: ^ar31, ^ar33
#click_pin: ^!ar35

# ------------------------------------------------------------------

# MANUAL_STEPPER STEPPER=fluid_0 MOVE=10 SPEED=10
# Manual steppers (one may define any number of sections with a
# "manual_stepper" prefix). These are steppers that are controlled by
# the MANUAL_STEPPER g-code command. For example: "MANUAL_STEPPER
# STEPPER=my_stepper MOVE=10 SPEED=5". See the docs/G-Codes.md file
# for a description of the MANUAL_STEPPER command. The steppers are
# not connected to the normal printer kinematics.

[manual_stepper fluid_0]
step_pin: ar2
dir_pin: ar3
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar40
# Step distance should be uL per step
step_distance: 0.0142857143

[manual_stepper fluid_1]
step_pin: ar4
dir_pin: ar5
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar41
# Step distance should be uL per step
step_distance: 0.0142857143

[manual_stepper fluid_2]
step_pin: ar6
dir_pin: ar7
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar44
# Step distance should be uL per step
step_distance: 0.0142857143

[manual_stepper fluid_3]
step_pin: ar42
dir_pin: ar43
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar45
# Step distance should be uL per step
step_distance: 0.0142857143

[manual_stepper fluid_4]
step_pin: ar50
dir_pin: ar51
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar58
# Step distance should be uL per step
step_distance: 0.0142857143

[manual_stepper fluid_5]
step_pin: ar52
dir_pin: ar53
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar47
# Step distance should be uL per step
step_distance: 0.0142857143

[manual_stepper fluid_6]
step_pin: ar14
dir_pin: ar15
# We need a valid enable pin for this to compile. Use any bullshit.
enable_pin: ar49
# Step distance should be uL per step
step_distance: 0.0142857143
